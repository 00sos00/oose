CREATE TABLE Luxville.USER(
    -- #Attributes
    USER_ID INT UNIQUE NOT NULL,
    FIRST_NAME VARCHAR(50),
    LAST_NAME VARCHAR(50),
    
    -- #Keys and relations
    PRIMARY KEY (USER_ID)
);

CREATE TABLE Luxville.USER_PHONE(
    -- #Attributes
    USER_ID INT NOT NULL,
    COUNTRY_CODE VARCHAR(5) NOT NULL,
    PHONE_NUMBER VARCHAR(15) NOT NULL,
    
    -- #Keys and relations
    FOREIGN KEY (USER_ID) REFERENCES Luxville.USER(USER_ID),
    PRIMARY KEY (USER_ID, COUNTRY_CODE, PHONE_NUMBER)
);

CREATE TABLE Luxville.ROLE(
    -- #Attributes
    ROLE_ID INT UNIQUE NOT NULL,
    ROLE_NAME VARCHAR(50) UNIQUE,
    
    -- #Keys and relations
    PRIMARY KEY(ROLE_ID)
);

CREATE TABLE Luxville.PERMISSION(
    -- #Attributes
    ROLE_ID INT,
    PERMISSION_ID INT UNIQUE NOT NULL,
    CAN_IMPORT_EXPORT_TRANSACTIONS BOOLEAN NOT NULL DEFAULT FALSE,
    CAN_VIEW_TRANSACTIONS BOOLEAN NOT NULL DEFAULT FALSE,
    CAN_EDIT_TRANSACTIONS BOOLEAN NOT NULL DEFAULT FALSE,
    CAN_CREATE_TRANSACTIONS BOOLEAN NOT NULL DEFAULT FALSE,
    CAN_DELETE_TRANSACTIONS BOOLEAN NOT NULL DEFAULT FALSE,
    CAN_EDIT_AUDITLOG BOOLEAN NOT NULL DEFAULT FALSE,
    CAN_EXPORT_AUDITLOG BOOLEAN NOT NULL DEFAULT FALSE,
    CAN_VIEW_AUDITLOG BOOLEAN NOT NULL DEFAULT FALSE,
    CAN_CREATE_USER BOOLEAN NOT NULL DEFAULT FALSE,
    CAN_EDIT_USER BOOLEAN NOT NULL DEFAULT FALSE,
    CAN_DELETE_USER BOOLEAN NOT NULL DEFAULT FALSE,
    CAN_MANAGE_ROLES BOOLEAN NOT NULL DEFAULT FALSE,
    
    -- #Keys and relations
    FOREIGN KEY(ROLE_ID) REFERENCES Luxville.ROLE(ROLE_ID),
    PRIMARY KEY (PERMISSION_ID)
);

CREATE TABLE Luxville.SYSTEMUSER(
    -- #Attributes
    USER_ID INT,
    SYSTEMUSER_ID INT UNIQUE NOT NULL,
    EMAIL VARCHAR(100) UNIQUE,
    PASSWORD VARCHAR(100),
    ROLE_ID INT NULL,
    
    -- #Keys and relations
    FOREIGN KEY (USER_ID) REFERENCES Luxville.USER(USER_ID),
    FOREIGN KEY (ROLE_ID) REFERENCES Luxville.ROLE(ROLE_ID),
    PRIMARY KEY (USER_ID, SYSTEMUSER_ID)
);

CREATE TABLE Luxville.REPORT(
    -- #Attributes
    REPORT_ID INT UNIQUE NOT NULL,
    SYSTEMUSER_ID INT,
    USER_ID INT,
    REPORT_TITLE VARCHAR(255) NOT NULL,
    REPORT_DESCRIPTION TEXT NULL,
    REPORT_TYPE VARCHAR(50) NULL,
    REPORT_FORMAT VARCHAR(50) NOT NULL,
    FILE_PATH VARCHAR(255) NULL,
    STATUS INT NOT NULL DEFAULT 1,
    GENERATED_AT TIMESTAMP NOT NULL,
    REVIEWED_AT TIMESTAMP NULL,
    
    -- #Keys and relations
    FOREIGN KEY (SYSTEMUSER_ID, USER_ID) REFERENCES Luxville.SYSTEMUSER(SYSTEMUSER_ID, USER_ID),
    PRIMARY KEY (REPORT_ID, SYSTEMUSER_ID, USER_ID)
);

CREATE TABLE Luxville.EXTERNALUSER(
    -- #Attributes
    EXTERNALUSER_ID INT UNIQUE NOT NULL,
    USER_ID INT,
    RATING FLOAT NOT NULL DEFAULT 0.0,
    
    -- #Keys and relations
    FOREIGN KEY(USER_ID) REFERENCES Luxville.USER(USER_ID),
    PRIMARY KEY(EXTERNALUSER_ID, USER_ID)
);

CREATE TABLE Luxville.BUYER(
    -- #Attributes
    BUYER_ID INT UNIQUE NOT NULL,
    EXTERNALUSER_ID INT,
    USER_ID INT,
    BUYER_SSN VARCHAR(20) UNIQUE NOT NULL,
    BUYER_AREA VARCHAR(100) NOT NULL,
    
    -- #Keys and relations
    FOREIGN KEY(EXTERNALUSER_ID, USER_ID) REFERENCES Luxville.EXTERNALUSER(EXTERNALUSER_ID, USER_ID),
    PRIMARY KEY(BUYER_ID, EXTERNALUSER_ID, USER_ID)
);

CREATE TABLE Luxville.SELLER(
    -- #Attributes
    SELLER_ID INT UNIQUE NOT NULL,
    EXTERNALUSER_ID INT,
    USER_ID INT,
    SELLER_SSN VARCHAR(20) UNIQUE NOT NULL,
    SELLER_AREA VARCHAR(100) NOT NULL,
    
    -- #Keys and relations
    FOREIGN KEY(EXTERNALUSER_ID, USER_ID) REFERENCES Luxville.EXTERNALUSER(EXTERNALUSER_ID, USER_ID),
    PRIMARY KEY(SELLER_ID, EXTERNALUSER_ID, USER_ID)
);

CREATE TABLE Luxville.OWNER(
    -- #Attributes
    OWNER_ID INT UNIQUE NOT NULL,
    EXTERNALUSER_ID INT,
    USER_ID INT,
    PROPERTY_ID VARCHAR(20) UNIQUE NOT NULL,
    
    -- #Keys and relations
    FOREIGN KEY(EXTERNALUSER_ID, USER_ID) REFERENCES Luxville.EXTERNALUSER(EXTERNALUSER_ID, USER_ID),
    PRIMARY KEY(OWNER_ID, EXTERNALUSER_ID, USER_ID)
);

CREATE TABLE Luxville.PROPERTY(
    -- #Attributes
    PROPERTY_ID VARCHAR(20) UNIQUE NOT NULL,
    OWNER_ID INT,
    OWNER_EXTERNALUSER_ID INT,
    OWNER_USER_ID INT,
    SELLER_ID INT NULL,
    SELLER_EXTERNALUSER_ID INT NULL,
    SELLER_USER_ID INT NULL,
    FOR_RENT BOOLEAN NOT NULL,
    FOR_SALE BOOLEAN NOT NULL,
    PRICE FLOAT NOT NULL,
    PAID_AMOUNT FLOAT NOT NULL DEFAULT 0.0,
    MY_CUT FLOAT NOT NULL DEFAULT 0.0,
    STATUS INT NOT NULL DEFAULT 1,
    AREA TEXT NOT NULL,
    LISTING_DATE TIMESTAMP NOT NULL,
    MEDIA_LINK VARCHAR(2048) NULL,
    IS_INSTALLMENT_AVAILABLE BOOLEAN NOT NULL DEFAULT FALSE,
    INSTALLMENT_DURATION_MONTHS INT NULL,
    DOWN_PAYMENT FLOAT NULL,
    MONTHLY_PAYMENT FLOAT NULL,
    INTEREST_RATE FLOAT NULL,
    PAYMENT_START_DATE TIMESTAMP NULL,
    LATITUDE FLOAT NOT NULL,
    LONGITUDE FLOAT NOT NULL,
    ADDRESS_LINK VARCHAR(2048) NOT NULL,
    SELLER_SSN VARCHAR(20) NULL,
    
    -- #Keys and relations
    FOREIGN KEY(OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID) REFERENCES Luxville.OWNER(OWNER_ID, EXTERNALUSER_ID, USER_ID),
    FOREIGN KEY(SELLER_ID, SELLER_EXTERNALUSER_ID, SELLER_USER_ID) REFERENCES Luxville.SELLER(SELLER_ID, EXTERNALUSER_ID, USER_ID),
    PRIMARY KEY(PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID)
);

CREATE TABLE Luxville.CLIENT(
    -- #Attributes
    CLIENT_ID INT UNIQUE NOT NULL,
    EXTERNALUSER_ID INT,
    USER_ID INT,
    NEED_PROPERTY_FEATURES TEXT NULL,
    PROVIDE_PROPERTY_FEATURES TEXT NULL,
    
    -- #Keys and relations
    FOREIGN KEY(EXTERNALUSER_ID, USER_ID) REFERENCES Luxville.EXTERNALUSER(EXTERNALUSER_ID, USER_ID),
    PRIMARY KEY(CLIENT_ID, EXTERNALUSER_ID, USER_ID)
);

CREATE TABLE Luxville.APPOINTMENT(
    -- #Attributes
    APPOINTMENT_ID INT UNIQUE NOT NULL,
    CLIENT_ID INT,
    CLIENT_EXTERNALUSER_ID INT,
    CLIENT_USER_ID INT,
    SYSTEMUSER_ID INT,
    USER_ID INT,
    PROPERTY_ID VARCHAR(20),
    OWNER_ID INT,
    OWNER_EXTERNALUSER_ID INT,
    OWNER_USER_ID INT,
    SCHEDULED_TIME TIMESTAMP NOT NULL,
    STATUS INT NOT NULL DEFAULT 0,
    INITIATED_AT TIMESTAMP NULL,
    
    -- #Keys and relations
    FOREIGN KEY(CLIENT_ID, CLIENT_EXTERNALUSER_ID, CLIENT_USER_ID) REFERENCES Luxville.CLIENT(CLIENT_ID, EXTERNALUSER_ID, USER_ID),
    FOREIGN KEY(SYSTEMUSER_ID, USER_ID) REFERENCES Luxville.SYSTEMUSER(SYSTEMUSER_ID, USER_ID),
    FOREIGN KEY(PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID) REFERENCES Luxville.PROPERTY(PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID),
    PRIMARY KEY(
        APPOINTMENT_ID,
        CLIENT_ID, CLIENT_EXTERNALUSER_ID, CLIENT_USER_ID,
        SYSTEMUSER_ID, USER_ID,
        PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID
    )
);

CREATE TABLE Luxville.AUDITLOG(
    -- #Attributes
    USER_ID INT,
    SYSTEMUSER_ID INT,
    AUDITLOG_ID INT UNIQUE NOT NULL,
    ACTION VARCHAR(50) NOT NULL,
    LOGGED_AT TIMESTAMP NOT NULL,
    
    -- #Keys and relations
    FOREIGN KEY (USER_ID, SYSTEMUSER_ID) REFERENCES Luxville.SYSTEMUSER(USER_ID, SYSTEMUSER_ID),
    PRIMARY KEY (USER_ID, SYSTEMUSER_ID, AUDITLOG_ID)
);

CREATE TABLE Luxville.DEAL(
    -- #Attributes
    DEAL_ID INT UNIQUE NOT NULL,
    SYSTEMUSER_ID INT,
    USER_ID INT,
    BUYER_ID INT,
    BUYER_EXTERNALUSER_ID INT,
    BUYER_USER_ID INT,
    SELLER_ID INT,
    SELLER_EXTERNALUSER_ID INT,
    SELLER_USER_ID INT,
    DEAL_DATE TIMESTAMP NOT NULL,
    
    -- #Keys and relations
    FOREIGN KEY(SYSTEMUSER_ID, USER_ID) REFERENCES Luxville.SYSTEMUSER(SYSTEMUSER_ID, USER_ID),
    FOREIGN KEY(BUYER_ID, BUYER_EXTERNALUSER_ID, BUYER_USER_ID) REFERENCES Luxville.BUYER(BUYER_ID, EXTERNALUSER_ID, USER_ID),
    FOREIGN KEY(SELLER_ID, SELLER_EXTERNALUSER_ID, SELLER_USER_ID) REFERENCES Luxville.SELLER(SELLER_ID, EXTERNALUSER_ID, USER_ID),
    PRIMARY KEY(
        DEAL_ID,
        SYSTEMUSER_ID, USER_ID,
        BUYER_ID, BUYER_EXTERNALUSER_ID, BUYER_USER_ID,
        SELLER_ID, SELLER_EXTERNALUSER_ID, SELLER_USER_ID
    )
);

CREATE TABLE Luxville.RENTING_DEAL(
    -- #Attributes
    RENTING_DEAL_ID INT UNIQUE NOT NULL,
    SYSTEMUSER_ID INT,
    USER_ID INT,
    BUYER_ID INT,
    BUYER_EXTERNALUSER_ID INT,
    BUYER_USER_ID INT,
    SELLER_ID INT,
    SELLER_EXTERNALUSER_ID INT,
    SELLER_USER_ID INT,
    DEAL_ID INT,
    START_DATE TIMESTAMP NOT NULL,
    SECURITY_AMOUNT FLOAT NULL,
    MONTHLY_RENT FLOAT NOT NULL DEFAULT 0.0,
    PAYMENT_FREQUENCY INT NOT NULL DEFAULT 0,
    LEASE_DURATION INT NOT NULL DEFAULT 0,
    UTILITIES_INCLUDED TEXT NULL,
    RENTAL_CONDITIONS TEXT NULL,
    
    -- #Keys and relations
    FOREIGN KEY (DEAL_ID, SYSTEMUSER_ID, USER_ID, 
                BUYER_ID, BUYER_EXTERNALUSER_ID, BUYER_USER_ID,
                SELLER_ID, SELLER_EXTERNALUSER_ID, SELLER_USER_ID)
    REFERENCES Luxville.DEAL(DEAL_ID, SYSTEMUSER_ID, USER_ID,
                           BUYER_ID, BUYER_EXTERNALUSER_ID, BUYER_USER_ID,
                           SELLER_ID, SELLER_EXTERNALUSER_ID, SELLER_USER_ID),
    
    PRIMARY KEY(
        RENTING_DEAL_ID,
        DEAL_ID,
        SYSTEMUSER_ID, USER_ID,
        BUYER_ID, BUYER_EXTERNALUSER_ID, BUYER_USER_ID,
        SELLER_ID, SELLER_EXTERNALUSER_ID, SELLER_USER_ID
    )
);
CREATE TABLE Luxville.SELLING_DEAL(
    -- #Attributes
    SELLING_DEAL_ID INT UNIQUE NOT NULL,
    SYSTEMUSER_ID INT,
    USER_ID INT,
    BUYER_ID INT,
    BUYER_EXTERNALUSER_ID INT,
    BUYER_USER_ID INT,
    SELLER_ID INT,
    SELLER_EXTERNALUSER_ID INT,
    SELLER_USER_ID INT,
    DEAL_ID INT,
    PAYMENT_TYPE VARCHAR(50) NOT NULL,
    NEGOTIABLE BOOLEAN NOT NULL DEFAULT FALSE,
    OWNERSHIP_TYPE VARCHAR(100),
    PROPERTY_TITLE_DEED TEXT NOT NULL,
    LEGAL_CLEARANCE BOOLEAN NOT NULL DEFAULT FALSE,
    FINAL_PRICE FLOAT NOT NULL DEFAULT 0.0,
    ASKING_PRICE FLOAT NOT NULL DEFAULT 0.0,
    PAID_AMOUNT FLOAT NOT NULL DEFAULT 0.0,
    COMMISSION_RATE FLOAT NOT NULL DEFAULT 0.0,
    
    -- #Keys and relations
    FOREIGN KEY (
        DEAL_ID,
        SYSTEMUSER_ID, USER_ID,
        BUYER_ID, BUYER_EXTERNALUSER_ID, BUYER_USER_ID,
        SELLER_ID, SELLER_EXTERNALUSER_ID, SELLER_USER_ID
    ) REFERENCES Luxville.DEAL(
        DEAL_ID,
        SYSTEMUSER_ID, USER_ID,
        BUYER_ID, BUYER_EXTERNALUSER_ID, BUYER_USER_ID,
        SELLER_ID, SELLER_EXTERNALUSER_ID, SELLER_USER_ID
    ),
    
    PRIMARY KEY(
        SELLING_DEAL_ID,
        DEAL_ID,
        SYSTEMUSER_ID, USER_ID,
        BUYER_ID, BUYER_EXTERNALUSER_ID, BUYER_USER_ID,
        SELLER_ID, SELLER_EXTERNALUSER_ID, SELLER_USER_ID
    )
);

CREATE TABLE Luxville.TRANSACTION(
    -- #Attributes
    TRANSACTION_ID INT UNIQUE NOT NULL,
    
    -- #Keys and relations
    PRIMARY KEY(TRANSACTION_ID)
);

CREATE TABLE Luxville.REVENUE(
    -- #Attributes
    REVENUE_ID INT UNIQUE NOT NULL,
    DEAL_ID INT,
    SYSTEMUSER_ID INT,
    USER_ID INT,
    BUYER_ID INT,
    BUYER_EXTERNALUSER_ID INT,
    BUYER_USER_ID INT,
    SELLER_ID INT,
    SELLER_EXTERNALUSER_ID INT,
    SELLER_USER_ID INT,
    TRANSACTION_ID INT,
    DESCRIPTION TEXT NULL,
    AMOUNT FLOAT NOT NULL DEFAULT 0.0,
    RECORDED_AT TIMESTAMP NOT NULL,
    
    -- #Keys and relations
    FOREIGN KEY(DEAL_ID, SYSTEMUSER_ID, USER_ID, BUYER_ID, BUYER_EXTERNALUSER_ID, BUYER_USER_ID, SELLER_ID, SELLER_EXTERNALUSER_ID, SELLER_USER_ID) 
        REFERENCES Luxville.DEAL(DEAL_ID, SYSTEMUSER_ID, USER_ID, BUYER_ID, BUYER_EXTERNALUSER_ID, BUYER_USER_ID, SELLER_ID, SELLER_EXTERNALUSER_ID, SELLER_USER_ID),
    FOREIGN KEY(TRANSACTION_ID) REFERENCES Luxville.TRANSACTION(TRANSACTION_ID),
    PRIMARY KEY(
        REVENUE_ID,
        DEAL_ID, SYSTEMUSER_ID, USER_ID,
        BUYER_ID, BUYER_EXTERNALUSER_ID, BUYER_USER_ID,
        SELLER_ID, SELLER_EXTERNALUSER_ID, SELLER_USER_ID,
        TRANSACTION_ID
    )
);

CREATE TABLE Luxville.EXPENSE(
    -- #Attributes
    EXPENSE_ID INT UNIQUE NOT NULL,
    TRANSACTION_ID INT,
    SYSTEMUSER_ID INT,
    USER_ID INT,
    DESCRIPTION TEXT NULL,
    AMOUNT FLOAT NOT NULL DEFAULT 0.0,
    
    -- #Keys and relations
    FOREIGN KEY(SYSTEMUSER_ID, USER_ID) REFERENCES Luxville.SYSTEMUSER(SYSTEMUSER_ID, USER_ID),
    FOREIGN KEY(TRANSACTION_ID) REFERENCES Luxville.TRANSACTION(TRANSACTION_ID),
    PRIMARY KEY(EXPENSE_ID, TRANSACTION_ID, SYSTEMUSER_ID, USER_ID)
);

CREATE TABLE Luxville.STUDIO(
    -- #Attributes
    PROPERTY_ID VARCHAR(20),
    STUDIO_ID INT UNIQUE NOT NULL,
    OWNER_ID INT,
    OWNER_EXTERNALUSER_ID INT,
    OWNER_USER_ID INT,
    FLOOR_NUMBER INT NOT NULL,
    APARTMENT_NAME VARCHAR(100) NOT NULL,
    IS_FURNISHED BOOLEAN,
    HAS_KITCHENETTE BOOLEAN,
    HAS_BALCONY BOOLEAN,
    MONTHLY_MAINTENANCE_FEE FLOAT,
    HAS_LANDLINE BOOLEAN,
    
    -- #Keys and relations
    FOREIGN KEY(PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID) REFERENCES Luxville.PROPERTY(PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID),
    PRIMARY KEY(STUDIO_ID, PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID)
);

CREATE TABLE Luxville.OFFICE(
    -- #Attributes
    PROPERTY_ID VARCHAR(20),
    OFFICE_ID INT UNIQUE NOT NULL,
    OWNER_ID INT,
    OWNER_EXTERNALUSER_ID INT,
    OWNER_USER_ID INT,
    FLOOR_NUMBER INT NOT NULL,
    BUILDING_NAME VARCHAR(100) NOT NULL,
    NUMBER_OF_ROOMS INT NOT NULL DEFAULT 0,
    MEETING_ROOMS INT,
    IS_FURNISHED BOOLEAN,
    HAS_RECEPTION_AREA BOOLEAN,
    HAS_PARKING BOOLEAN,
    MONTHLY_MAINTENANCE_FEE FLOAT,
    HAS_LANDLINE BOOLEAN,
    NETWORK_INFRASTRUCTURE TEXT NULL,
    
    -- #Keys and relations
    FOREIGN KEY(PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID) REFERENCES Luxville.PROPERTY(PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID),
    PRIMARY KEY(OFFICE_ID, PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID)
);

CREATE TABLE Luxville.APARTMENT(
    -- #Attributes
    PROPERTY_ID VARCHAR(20),
    APARTMENT_ID INT UNIQUE NOT NULL,
    OWNER_ID INT,
    OWNER_EXTERNALUSER_ID INT,
    OWNER_USER_ID INT,
    FLOOR_NUMBER INT NOT NULL,
    UNIT_NUMBER INT NOT NULL,
    NUMBER_OF_BATHROOMS INT NOT NULL,
    NUMBER_OF_BEDROOMS INT NOT NULL,
    BUILDING_NAME VARCHAR(100),
    HAS_ELEVATOR BOOLEAN,
    MONTHLY_MAINTENANCE_FEE FLOAT,
    IS_FURNISHED BOOLEAN,
    HAS_BALCONY BOOLEAN,
    VIEW_TYPE TEXT NULL,
    NETWORK_INFRASTRUCTURE TEXT NULL,
    HAS_LANDLINE BOOLEAN,
    
    -- #Keys and relations
    FOREIGN KEY(PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID) REFERENCES Luxville.PROPERTY(PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID),
    PRIMARY KEY(APARTMENT_ID, PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID)
);

CREATE TABLE Luxville.HOUSE(
    -- #Attributes
    PROPERTY_ID VARCHAR(20),
    HOUSE_ID INT UNIQUE NOT NULL,
    OWNER_ID INT,
    OWNER_EXTERNALUSER_ID INT,
    OWNER_USER_ID INT,
    NUMBER_OF_BATHROOMS INT NOT NULL,
    NUMBER_OF_BEDROOMS INT NOT NULL,
    NUMBER_OF_FLOORS INT,
    HAS_GARAGE BOOLEAN,
    HAS_GARDEN BOOLEAN,
    YEAR_BUILT INT,
    HEATING_TYPE VARCHAR(50),
    COOLING_TYPE VARCHAR(50),
    IS_FURNISHED BOOLEAN,
    BACKYARD_AREA FLOAT,
    FLOORING_TYPE VARCHAR(50),
    ROOF_TYPE VARCHAR(50),
    NETWORK_INFRASTRUCTURE TEXT NULL,
    HAS_LANDLINE BOOLEAN,
    
    -- #Keys and relations
    FOREIGN KEY(PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID) REFERENCES Luxville.PROPERTY(PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID),
    PRIMARY KEY(HOUSE_ID, PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID)
);

CREATE TABLE Luxville.LAND(
    -- #Attributes
    PROPERTY_ID VARCHAR(20),
    LAND_ID INT UNIQUE NOT NULL,
    OWNER_ID INT,
    OWNER_EXTERNALUSER_ID INT,
    OWNER_USER_ID INT,
    LAND_TYPE VARCHAR(100) NOT NULL DEFAULT 'Residential',
    ZONING_INFO TEXT NOT NULL,
    BUILDABLE_AREA BOOLEAN NOT NULL DEFAULT TRUE,
    PLOT_NUMBER VARCHAR(20) NOT NULL,
    TOPOGRAPHY VARCHAR(50),
    ROAD_ACCESS TEXT,
    
    -- #Keys and relations
    FOREIGN KEY(PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID) REFERENCES Luxville.PROPERTY(PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID),
    PRIMARY KEY(LAND_ID, PROPERTY_ID, OWNER_ID, OWNER_EXTERNALUSER_ID, OWNER_USER_ID)
);